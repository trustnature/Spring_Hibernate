<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/util 
           http://www.springframework.org/schema/util/spring-util-3.0.xsd
           http://www.springframework.org/schema/task  
		   http://www.springframework.org/schema/task/spring-task-3.0.xsd"
		   default-lazy-init="false">

	<context:annotation-config />
	<task:annotation-driven /> <!-- 定时器开关 -->
	<context:component-scan base-package="xyz.tuny.jx" />
	<bean id="ApplicationContextHelper" class="xyz.tuny.jx.util.ApplicationContextHelper"></bean>  
  	<aop:aspectj-autoproxy />
  	
	<!-- 引入属性文件 -->
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>  
	<context:property-placeholder location="classpath:config.properties" />
	<bean id="propertiesUtil" class="xyz.tuny.jx.util.PropertiesUtil">
		<constructor-arg value="config.properties" />
	</bean>
			
	<!-- redis mysql 数据库 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" lazy-init="false">   
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" /><!-- kmtcard -->
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="5" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="30" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<!-- 检测连接是否有效的SQL -->
		<property name="validationQuery" value="SELECT 1 FROM dual" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="30" />
	</bean>
	
	<!-- 配置spring的JdbcTemplate 
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>-->
    
	<!-- <bean id="redisDao" class="com.htxx.dao.impl.RedisSqlDaoImpl" parent="jdbcTemplate" / -->
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 扫描实体类 -->
		<property name="packagesToScan">
			<list>
				<value>xyz.tuny.jx.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.autoReconnect">${hibernate.autoReconnect}</prop>
			</props>
		</property>
	</bean>

	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- <bean id="baseDao" class="com.fpcy.basic.dao.impl.BaseDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean> -->

	<tx:annotation-driven transaction-manager="txManager" />

	<aop:config>
		<aop:pointcut id="bussinessService"
			expression="execution(* xyz.tuny.jx.service..*.*(..))" />
		<aop:advisor pointcut-ref="bussinessService" advice-ref="txAdvice" />
	</aop:config>
	
	<!-- 事务 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		 <tx:attributes>  
            <tx:method name="add*" propagation="REQUIRED" />  
            <tx:method name="del*" propagation="REQUIRED" />  
            <tx:method name="mod*" propagation="REQUIRED" /> 
            <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" /> 
            <tx:method name="*" read-only="true" />  
        </tx:attributes>
	</tx:advice>
	
	<!-- <bean id="redisFpcyTask" class="com.fpcy.basic.util.RedisFpcyTask" scope="prototype">
		<property name="baseDao" ref="baseDao"></property>
	</bean>
	
	<bean class="com.fpcy.basic.listener.StartupListener"/> -->
	
	<!--<import resource="quartz-job.xml" />-->
</beans>
